---
title: Extras
---

<h2>Custom navigation UI</h2>

<p>With the <a href="api.html">Flickity API</a>, you can build custom gallery navigation UI.</p>

<div class="example duo">
  <div class="example__code duo__cell">
    ``` js
    // init Flickity
    var $gallery = $('.gallery').flickity({
      prevNextButtons: false,
      pageDots: false
    });
    // Flickity instance
    var flkty = $gallery.data('flickity');
    // elements
    var $cellButtonGroup = $('.button-group--cells');
    var $cellButtons = $cellButtonGroup.find('.button');

    // update selected cellButtons
    $gallery.on( 'select.flickity', function() {
      $cellButtons.filter('.is-selected')
        .removeClass('is-selected');
      $cellButtons.eq( flkty.selectedIndex )
        .addClass('is-selected');
    });

    // select cell on button click
    $cellButtonGroup.on( 'click', '.button', function() {
      var index = $(this).index();
      $gallery.flickity( 'select', index );
    });
    // previous
    $('.button--previous').on( 'click', function() {
      $gallery.flickity('previous');
    });
    // next
    $('.button--next').on( 'click', function() {
      $gallery.flickity('next');
    });
    ```
  </div>
  <div class="example__demo duo__cell" data-js-module="custom-nav">
    <div class="gallery">
      <div class="gallery-cell"></div>
      <div class="gallery-cell"></div>
      <div class="gallery-cell"></div>
      <div class="gallery-cell"></div>
      <div class="gallery-cell"></div>
    </div>
    <div class="button-row button-row--centered">
      <button class="button button--previous">&larr;</button>
      <div class="button-group button-group--cells button-group--inline">
        <button class="button is-selected">1</button>
        <button class="button">2</button>
        <button class="button">3</button>
        <button class="button">4</button>
        <button class="button">5</button>
      </div>
      <button class="button button--next">&rarr;</button>
    </div>
    {{#codepens.custom_nav}}
      {{>edit_demo}}
    {{/codepens.custom_nav}}
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h2>Extra demos</h2>

<ul>
  <li><a href="http://codepen.io/desandro/pen/dPdVNM">Setting image caption</a> or <a href="http://codepen.io/desandro/pen/OPQxpO">with vanilla JS</a></li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>RequireJS</h2>

<p>Flickity supports <a href="http://requirejs.org/">RequireJS</a>.</p>

<p>You can require <code>flickity.pkgd.js</code>.</p>

``` js
requirejs( [
  'path/to/flickity.pkgd.js',
], function( Flickity ) {
  var flickity = new Flickity( '.gallery', {...});
});
```

<p>To use Flickity as a jQuery plugin with RequireJS and flickity.pkgd.js, you need to call jQuery Bridget.</p>

``` js
// require the require function
requirejs( [ 'require', 'jquery', 'path/to/flickity.pkgd.js' ],
  function( require, $, Flickity ) {
    // require jquery-bridget, it's included in flickity.pkgd.js
    require( [ 'jquery-bridget/jquery.bridget' ],
    function() {
      // make Flickity a jQuery plugin
      $.bridget( 'flickity', Flickity );
      // now you can use $().flickity()
      $('.gallery').flickity({...});
    }
  );
});
```

<p>Or, you can manage dependencies with <a href="http://bower.io">Bower</a>. Set <code>baseUrl: <span class="string">"bower_components/"</span></code> and set a config path for all your application code.</p>

``` js
requirejs.config({
  baseUrl: 'bower_components/',
  paths: {
    app: '../'
  }
});

requirejs( [
  'flickity/js/index',
  'app/my-component.js'
], function( Flickity, myComp ) {
  var iso = new Flickity( '.gallery', {...});
});
```

<p>You can require Bower dependencies and use Isotope as a jQuery plugin with jQuery Bridget.</p>

``` js
requirejs.config({
  baseUrl: '../bower_components',
  paths: {
    jquery: 'jquery/jquery'
  }
});

requirejs( [
    'jquery',
    'flickity/js/index',
    'jquery-bridget/jquery.bridget'
  ],
  function( $, Flickity ) {
    // make Flickity a jQuery plugin
    $.bridget( 'flickity', Flickity );
    // now you can use $().flickity()
    $('.gallery').flickity({...});
});
```

<p>As a stand-alone package, Flickity does not include <code>imagesLoaded</code> and <code>asNavFor</code> code. You can require these packages separately.</p>

``` js
requirejs( [
    'flickity-imagesloaded/flickity-imagesloaded',
    'flickity-as-nav-for/as-nav-for'
  ],
  function( Flickity ) {
    // now use imagesLoaded and asNavFor
    var flkty = new Flickity( '.gallery-a', {
      imagesLoaded: true,
      asNavFor: '.gallery-b'
    });
});
```

{{! ----------------------------------------------------------------- }}

<h2>Browserify</h2>

<p>Flickity works with <a href="http://browserify.org/">Browserify</a>. Install <a href="https://www.npmjs.com/package/flickity">Flickity with npm</a>.</p>

``` bash
npm install flickity
```

``` js
var Flickity = require('flickity');

var flickity = new Flickity( '.gallery', {
  // options
});
```

<p>To use Flickity as a jQuery plugin with Browserify, you need to call <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a>.</p>

``` bash
npm install jquery-bridget
```

``` js
var $ = require('jquery');
require('jquery-bridget');
var Flickity = require('flickity');

// make Flickity a jQuery plugin
$.bridget( 'flickity', Flickity );
// now you can use $().flickity()
$('.gallery').flickity({...});
```

<p>As a stand-alone package, Flickity does not include <code>imagesLoaded</code> and <code>asNavFor</code> code. You can install and require the <a href="https://www.npmjs.com/package/flickity-imagesloaded"><code>flickity-imagesloaded</code></a> and <a href="https://www.npmjs.com/package/flickity-as-nav-for"><code>flickity-as-nav-for</code></a> packages separately.</p>

``` bash
npm install flickity-imagesloaded
npm install flickity-as-nav-for
```

``` js
var Flickity = require('flickity-imagesloaded');
require('flickity-as-nav-for');

// now use imagesLoaded and asNavFor
var flkty = new Flickity( '.gallery-a', {
  imagesLoaded: true,
  asNavFor: '.gallery-b'
});
```

{{! ----------------------------------------------------------------- }}

<h2>Issues</h2>

<h3>Reduced test cases</h3>

<p>Creating a reduced test case is the best way to debug problems and report issues. Read <a href="http://css-tricks.com/reduced-test-cases/">CSS Tricks</a> on why they&rsquo;re so great.</p>

<p>Create a reduced test case for Flickity by forking any one of the <a href="http://codepen.io/desandro/tag/flickity-docs">CodePen demos</a> from these docs.</p>

<ul>
  <li>A reduced test case clearly demonstrates the bug or issue.</li>
  <li>It contains the bare minimum HTML, CSS, and JavaScript required to demonstrate the bug.</li>
  <li>A link to your production site is <b>not</b> a reduced test case.</li>
</ul>

<p>Creating a reduced test case is the best way to get your issue addressed. They help you point out the problem. They help us debug the problem. They help others understand the problem.</p>

{{! ----------------------------------------------------------------- }}

<h3>Submitting issues</h3>

<p>Report <a href="https://github.com/metafizzy/flickity/issues/">issues on GitHub</a>. Make sure to include a <strong>reduced test case</strong>. Without a reduced test case, your issue may be closed.</p>

{{! ----------------------------------------------------------------- }}

<h3>Feature requests</h3>

<p>Help us select new features by looking over <a href="https://github.com/metafizzy/flickity/labels/feature%20request">requested features on the GitHub issue tracker</a> and adding your <strong>+1</strong> or subscribing to features you&rsquo;d like to see added.</p>

{{! ----------------------------------------------------------------- }}
